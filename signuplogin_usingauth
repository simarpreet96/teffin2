sign-up.html :-----


 <form enctype="multipart/form-data" method="post">
                    {% csrf_token %}

                 <div class="input-group form-group">
                            <div class="input-group-prepend">
                                <span class="input-group-text"><i class="fa fa-user"></i></span>
                            </div>
                            {{ form.username }}
                            <span style="color:red">
                         {% for error in form.username.errors %}
                        {{error}}
                        {% endfor %}
                        </span>

                </div>

               <div class="input-group form-group">
                            <div class="input-group-prepend">
                                <span class="input-group-text"><i class="fa fa-envelope"></i></span>
                            </div>
                            {{ form.email }}
                            <span style="color:red">
                         {% for error in form.email.errors %}
                        {{error}}
                        {% endfor %}
                        </span>

                </div>
                       <div class="input-group form-group">
                            <div class="input-group-prepend">
                                <span class="input-group-text"><i class="fa fa-phone"></i></span>
                            </div>
                            {{ form.phone }}
                            <span style="color:red">
                         {% for error in form.phone.errors %}
                        {{error}}
                        {% endfor %}
                        </span>
                </div>
                       <div class="input-group form-group">
                            <div class="input-group-prepend">
                                <span class="input-group-text"><i class="fa fa-key"></i></span>
                            </div>
                            {{ form.password1 }}
                            <span style="color:red">
                         {% for error in form.password1.errors %}
                        {{error}}
                        {% endfor %}
                        </span>

                </div>
                       <div class="input-group form-group">
                            <div class="input-group-prepend">
                                <span class="input-group-text"><i class="fa fa-key"></i></span>
                            </div>
                            {{ form.password2 }}
                            <span style="color:red">
                         {% for error in form.password2.errors %}
                        {{error}}
                        {% endfor %}
                        </span>

                </div>
                 <div class="form-group">
                  <div class="wt-modal-btn">
                  <button class="wtmodalsubmitbtn" type="submit" >Submit</button>
                      <a href="{% url 'login' %}">Login</a>
                </div>
                </div>
               </form>

****************************************************************************************************************************
log-in.html :---------------------------------
*******************************************************

 <form enctype="multipart/form-data" method="post">
                    {% csrf_token %}


               <div class="input-group form-group">
                            <div class="input-group-prepend">
                                <span class="input-group-text"><i class="fa fa-envelope"></i></span>
                            </div>
                            {{ form.email }}
                            <span style="color:red">
                         {% for error in form.email.errors %}
                        {{error}}
                        {% endfor %}
                        </span>

                </div>

                       <div class="input-group form-group">
                            <div class="input-group-prepend">
                                <span class="input-group-text"><i class="fa fa-key"></i></span>
                            </div>
                            {{ form.password }}
                            <span style="color:red">
                         {% for error in form.password.errors %}
                        {{error}}
                        {% endfor %}
                        </span>

                </div>

                 <div class="form-group">
                  <div class="wt-modal-btn">
                  <button class="wtmodalsubmitbtn" type="submit" >Submit</button>
                </div>
                </div>
               </form>
****************************************************************************************************************************
setting.py :-------------------------
******************************
INSTALLED_APPS = [

    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',

]


AUTHENTICATION_BACKENDS = (


    # 'phone_login.backends.phone_backend.PhoneBackend', #login with phone
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
    'django.contrib.auth.backends.AllowAllUsersModelBackend'

)

****************************************************************************************************************************
views.py :--------------------------
**************************************

def signup(request):
    if request.method == 'POST':
        form = SignUpForm(request.POST, request.FILES)
        if form.is_valid():
            form.save()
            phone = form.cleaned_data.get('phone')
            email = form.cleaned_data.get('email')
            raw_password = form.cleaned_data.get('password1')
            user = authenticate(email=email, password=raw_password, phone=phone)
            login(request, user)
            return redirect('index')
    else:
        form = SignUpForm()
    return render(request, 'registration/sign-up.html', {'form': form})





def user_login(request):
    redirect_to = request.GET.get('next','')
    if request.method == 'POST':
        form = UserLoginForm(request.POST)
        if form.is_valid():

            email = request.POST['email']
            password = request.POST['password']
            print(email,password,'=========')
            username = User.objects.get(email=email.lower()).username
            user = authenticate(request, username=username, password=password)
            auth.login(request, user,backend='')
            user = None
            messages.error(request, "Your Email Address or Password was not recognized")
            return redirect(reverse('index'))
        else:
            messages.error(request, "Your Email Address or Password was not recognized")
    else:
        form = UserLoginForm()
    return render(request, 'registration/login.html', locals())


*****************************************************************************************************************
models.py:--------------
*****************

from django.contrib.auth.models import AbstractUser
from django.utils.translation import ugettext_lazy as _
# from webcam.forms import CameraField
# from webcam.models import CameraField


class User(AbstractUser):
    id = models.AutoField(primary_key=True)
    email = models.EmailField(unique=True, null=False, blank=False)
    phone = models.CharField(unique=False, null=False, max_length=10)
    username = models.CharField(max_length=30, unique=True)


    USERNAME_FIELD = 'email'
    REQUIRED_FIELDS = ['phone', 'username']


    def __str__(self):
        return self.username

******************************************************************************************************************************
forms.py:-
******************

from django import forms
from django.contrib.auth.forms import UserCreationForm
from .models import User


class SignUpForm(UserCreationForm):
    username = forms.CharField(required=True,max_length=100,label='',widget=forms.TextInput(attrs={'class': "form-control",'placeholder':'Username'}))
    email = forms.EmailField(required=True,max_length=100,label='',widget=forms.EmailInput(attrs={'class': "form-control",'placeholder':'Email'}))
    phone = forms.CharField(required=True,max_length=100,label='',widget=forms.NumberInput(attrs={'class': "form-control",'placeholder':'Phone'}))
    password1 = forms.CharField(required=True,max_length=100,label='',widget=forms.PasswordInput(attrs={'class': "form-control",'placeholder':'Password'}))
    password2 = forms.CharField(required=True,max_length=100,label='',widget=forms.PasswordInput(attrs={'class': "form-control",'placeholder':'Confirm Password'}))
    class Meta:
        model=User
        fields=('username','email','phone','password1', 'password2')



class UserLoginForm(forms.Form):
    email = forms.EmailField(required=True,max_length=100,label='',widget=forms.EmailInput(attrs={'class': "form-control",'placeholder':'Email'}))
    password = forms.CharField(required=True,max_length=100,label='',widget=forms.PasswordInput(attrs={'class': "form-control",'placeholder':'Password'}))
    def clean_email(self):
        email = self.cleaned_data['email']
        if not User.objects.filter(email__iexact=email,is_active=True).exists():
            raise forms.ValidationError(
                "There is no user registered with the specified email address!")
        return email

*******************************************************************************************************************************





